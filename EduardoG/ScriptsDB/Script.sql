
SET NOCOUNT ON;
IF  DB_ID('MovimentosManuais')  IS  NULL
BEGIN
    CREATE  DATABASE    MovimentosManuais;
END
GO

USE MovimentosManuais;
GO

-- Tabela PRODUTO
IF OBJECT_ID('dbo.PRODUTO', 'U') IS NOT NULL DROP TABLE dbo.PRODUTO;
CREATE TABLE dbo.PRODUTO (
    COD_PRODUTO CHAR(4) NOT NULL PRIMARY KEY,
    DES_PRODUTO VARCHAR(30) NULL,
    STA_STATUS CHAR(1) NULL
);
GO

-- Tabela PRODUTO_COSIF
IF OBJECT_ID('dbo.PRODUTO_COSIF', 'U') IS NOT NULL DROP TABLE dbo.PRODUTO_COSIF;
CREATE TABLE dbo.PRODUTO_COSIF (
    COD_PRODUTO CHAR(4) NOT NULL,
    COD_COSIF CHAR(11) NOT NULL,
    COD_CLASSIFICACAO CHAR(6) NULL,
    STA_STATUS CHAR(1) NULL,
    CONSTRAINT PK_PRODUTO_COSIF PRIMARY KEY (COD_PRODUTO, COD_COSIF),
    CONSTRAINT FK_PRODUTO_COSIF_PRODUTO FOREIGN KEY (COD_PRODUTO) REFERENCES dbo.PRODUTO(COD_PRODUTO)
);
GO

-- Tabela MOVIMENTO_MANUAL
IF OBJECT_ID('dbo.MOVIMENTO_MANUAL', 'U') IS NOT NULL DROP TABLE dbo.MOVIMENTO_MANUAL;
CREATE TABLE dbo.MOVIMENTO_MANUAL (
    DAT_MES NUMERIC(2,0) NOT NULL,
    DAT_ANO NUMERIC(4,0) NOT NULL,
    NUM_LANCAMENTO NUMERIC(18,0) NOT NULL,
    COD_PRODUTO CHAR(4) NOT NULL,
    COD_COSIF CHAR(11) NOT NULL,
    VAL_VALOR NUMERIC(18,2) NOT NULL,
    DES_DESCRICAO VARCHAR(50) NOT NULL,
    DAT_MOVIMENTO DATETIME NOT NULL,
    COD_USUARIO VARCHAR(15) NOT NULL,
    CONSTRAINT PK_MOVIMENTO PRIMARY KEY (DAT_MES, DAT_ANO, NUM_LANCAMENTO),
    CONSTRAINT FK_MOVIMENTO_PRODUTO FOREIGN KEY (COD_PRODUTO) REFERENCES dbo.PRODUTO(COD_PRODUTO),
    CONSTRAINT FK_MOVIMENTO_PRODUTO_COSIF FOREIGN KEY (COD_PRODUTO, COD_COSIF) REFERENCES dbo.PRODUTO_COSIF(COD_PRODUTO, COD_COSIF)
);
GO

-- Inserts em PRODUTO
INSERT INTO dbo.PRODUTO (COD_PRODUTO, DES_PRODUTO, STA_STATUS) VALUES
('P001', 'Produto Teste 1', 'A'),
('P002', 'Produto Teste 2', 'A'),
('P003', 'Produto Teste 3', 'A');
GO

-- Inserts em PRODUTO_COSIF
INSERT INTO dbo.PRODUTO_COSIF (COD_PRODUTO, COD_COSIF, COD_CLASSIFICACAO, STA_STATUS) VALUES
('P001', '01', 'NORMAL', 'A'),
('P001', '02', 'MTM', 'A'),
('P002', '01', 'NORMAL', 'A'),
('P003', '01', 'NORMAL', 'A'),
('P003', '02', 'MTM', 'A');
GO

-- Inserts em MOVIMENTO_MANUAL
INSERT INTO dbo.MOVIMENTO_MANUAL (DAT_MES, DAT_ANO, NUM_LANCAMENTO, COD_PRODUTO, COD_COSIF, VAL_VALOR, DES_DESCRICAO, DAT_MOVIMENTO, COD_USUARIO)
VALUES
(10, 2025, 1, 'P001', '01', 500.00, 'Teste Movimentos', GETDATE(), 'user01'),
(10, 2025, 2, 'P002', '01', 10.00, 'Teste Movimentos 2', GETDATE(), 'user01'),
(10, 2025, 3, 'P001', '02', 12.00, 'Teste Movimentos 3', GETDATE(), 'user01'),
(10, 2025, 4, 'P001', '01', 100.00, 'Teste Movimentos 4', GETDATE(), 'user01');
GO

-- Stored Procedure: usp_GetMovimentosPorMesAno
IF OBJECT_ID('dbo.usp_GetMovimentosPorMesAno', 'P') IS NOT NULL
    DROP PROCEDURE dbo.usp_GetMovimentosPorMesAno;
GO
CREATE PROCEDURE dbo.usp_GetMovimentosPorMesAno
    @Mes INT,
    @Ano INT
AS
BEGIN
    SET NOCOUNT ON;
    SELECT
        m.DAT_MES AS Mes,
        m.DAT_ANO AS Ano,
        m.COD_PRODUTO AS CodigoProduto,
        p.DES_PRODUTO AS DescricaoProduto,
        m.NUM_LANCAMENTO AS NumeroLancamento,
        m.DES_DESCRICAO AS Descricao,
        m.VAL_VALOR AS Valor
    FROM dbo.MOVIMENTO_MANUAL m
    INNER JOIN dbo.PRODUTO p ON p.COD_PRODUTO = m.COD_PRODUTO
    WHERE m.DAT_MES = @Mes AND m.DAT_ANO = @Ano
    ORDER BY m.DAT_MES, m.DAT_ANO, m.NUM_LANCAMENTO;
END
GO

-- Procedimento auxiliar: fn_GetNextNumLancamento
IF OBJECT_ID('dbo.fn_GetNextNumLancamento', 'IF') IS NOT NULL
    DROP FUNCTION dbo.fn_GetNextNumLancamento;
GO
CREATE FUNCTION dbo.fn_GetNextNumLancamento (@Mes INT, @Ano INT)
RETURNS BIGINT
AS
BEGIN
    DECLARE @maxnum BIGINT;
    SELECT @maxnum = MAX(NUM_LANCAMENTO) FROM dbo.MOVIMENTO_MANUAL WHERE DAT_MES = @Mes AND DAT_ANO = @Ano;
    IF @maxnum IS NULL SET @maxnum = 0;
    RETURN @maxnum + 1;
END;
GO
